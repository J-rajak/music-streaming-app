{"version":3,"file":"static/js/484.20776f05.chunk.js","mappings":"4IAEA,MAoBA,EApBgBA,KACd,MACMC,EACc,UAFEC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAG7C,4FACA,2FAEN,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0CAAyCC,UACtDF,EAAAA,EAAAA,KAAA,OACEG,IAAKP,EACLQ,IAAI,GACJH,UAAU,4BACVI,MAAK,QACLC,OAAM,WAEJ,C,qHCVV,MA2IA,EA3IuBC,IAAiC,IAAhC,SAAEC,EAAQ,aAAEC,GAAcF,EAChD,MAAM,MACJG,EAAK,KACLC,EAAI,IACJC,EAAG,QACHC,EAAO,YACPC,EAAW,MACXC,EAAK,MACLC,EAAK,WACLC,EAAU,MACVrB,EAAK,UACLsB,EAAS,YACTC,GACEX,EACEY,GAAgBvB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAC7CsB,GAAWC,EAAAA,EAAAA,MAEXC,EAA6B,YAAjBd,EACZe,EAA8B,aAAjBf,EACbgB,EAA2B,UAAjBhB,EAOhB,OACET,EAAAA,EAAAA,KAAC0B,EAAAA,EAAOC,QAAO,CACbC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,IACxB/B,UAAU,qGACVgC,MAAO,CAAEC,gBAAgB,OAADC,OAASlB,GAAcrB,GAAS,GAAE,MAAMM,UAEhEkC,EAAAA,EAAAA,MAAA,OAAKnC,UAAU,mLAAkLC,SAAA,EAC/LkC,EAAAA,EAAAA,MAAA,OACEnC,UAAS,2IAAAkC,OACPZ,EAAY,eAAiB,cAC5BrB,SAAA,EAEDe,GAAcrB,KACdI,EAAAA,EAAAA,KAAA,OACEG,IAAKc,GAAcrB,EACnBQ,IAAG,GAAA+B,OAAKzB,EAAK,UACbT,UAAS,gDAAAkC,OACPZ,EAAY,eAAiB,gBAIlCC,IAAeP,IACdjB,EAAAA,EAAAA,KAACqC,EAAAA,IAAY,CAACpC,UAAU,mEAEzBwB,IAAYR,IACXjB,EAAAA,EAAAA,KAACsC,EAAAA,IAAY,CAACrC,UAAU,mEAEzBsB,IAAc3B,IACbI,EAAAA,EAAAA,KAACuC,EAAAA,IAAe,CAACtC,UAAU,qFAG/BmC,EAAAA,EAAAA,MAAA,WAASnC,UAAU,gBAAeC,SAAA,CAC/BQ,IACCV,EAAAA,EAAAA,KAAA,MAAIC,UAAS,iBAAAkC,OAAmBf,EAAa,sBAAqBlB,SAC/DQ,EAAM8B,gBAGV7B,IACCX,EAAAA,EAAAA,KAAA,MAAIC,UAAS,iBAAAkC,OAAmBf,EAAa,sBAAqBlB,SAC/DS,EAAK6B,gBAGT1B,IAAed,EAAAA,EAAAA,KAAA,KAAGC,UAAS,qBAAuBC,SAAEY,IACpDF,IAAOZ,EAAAA,EAAAA,KAAA,KAAGC,UAAS,qBAAuBC,SAAEU,IAC5CM,IACCkB,EAAAA,EAAAA,MAAA,KAAGnC,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAC,iBAAoB,KACzDF,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CACHC,GAAE,UAAAP,OAAYjB,EAAUyB,KACxB1C,UAAS,4BAAAkC,OAA8Bf,EAAa,QAAOlB,SAE1DgB,EAAU0B,cAIhB/B,IACCuB,EAAAA,EAAAA,MAAA,KAAGnC,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAC,cAAiB,KACtDF,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CACHC,GAAE,aAAAP,OAAetB,EAAQ8B,KACzB1C,UAAS,4BAAAkC,OAA8Bf,EAAa,QAAOlB,SAE1DW,EAAQF,UAIdQ,IACCiB,EAAAA,EAAAA,MAAA,KAAGnC,UAAS,QAAUC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAC,kBAAqB,KAC1DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+CAA8CC,UAC3D2C,EAAAA,EAAAA,IAAW1B,SAIhBI,IACAa,EAAAA,EAAAA,MAAA,KAAGnC,UAAS,QAAUC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAC,WAAc,KACnDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+CAA8CC,SAC3Da,QAILU,GAAWT,IACXhB,EAAAA,EAAAA,KAAA,KAAGC,UAAS,4BAAAkC,OAA8Bf,EAAa,YAAWlB,UAC/D4C,EAAAA,EAAAA,IAAuB9B,MAG5BoB,EAAAA,EAAAA,MAAA,OAAKnC,UAAU,8CAA6CC,SAAA,EACxDqB,IACAvB,EAAAA,EAAAA,KAAA,UACE+C,QAjGKC,KACjB3B,GAAS4B,EAAAA,EAAAA,IAAS,CAAEC,MAAOlC,KAC3BK,GAAS8B,EAAAA,EAAAA,KAAW,GAAM,EAgGdlD,UAAS,+CAAAkC,OAAiDf,EAAa,4GAA2GlB,UAElLF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,YAGnCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,0IAAyIC,UACvJF,EAAAA,EAAAA,KAACoD,EAAAA,EAAU,CACTC,QAAS5B,EAAUjB,EAASmC,IAAM,KAClCW,UAAW/B,EAAYf,EAASmC,IAAM,KACtCY,WAAY/B,EAAahB,EAASmC,IAAM,KACxCa,KAAM/C,gBAMD,C,gICtIrB,MAqGA,EArGiBF,IAA0B,IAAzB,MAAES,EAAK,SAAEyC,GAAUlD,EACnC,MAAMa,GAAgBvB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAE5C2D,EAAcC,IAAmBC,EAAAA,EAAAA,UADnB,GAEfpC,EAA0B,aAAbiC,EACbpC,GAAWC,EAAAA,EAAAA,OACX,YAAEuC,EAAW,UAAEC,IAAcjE,EAAAA,EAAAA,KAAaC,GAAUA,EAAMiE,SAWhE,OACE3B,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,CACGc,EAAMgD,MAAM,EAAGN,GAAcO,KAAI,CAACC,EAAMC,KACvC/B,EAAAA,EAAAA,MAAA,MAEEnC,UAAS,6FAAAkC,OACP0B,EAAYlB,MAAQuB,EAAKvB,IAAG,MAAAR,OAClBf,EAAa,kBACnB+C,EAAQ,IAAM,EACd,mBACA,oBACHjE,SAAA,EAEHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAAA,UAAQ+C,QAASA,IAnBPoB,KAClB9C,GAAS4B,EAAAA,EAAAA,IAAS,CAAEC,MAAOlC,EAAOmD,WAClC9C,GAAS8B,EAAAA,EAAAA,KAAW,GAAM,EAiBKH,CAAWmB,GAAOjE,SACtC4D,GAAaD,GAAeA,EAAYlB,MAAQuB,EAAKvB,KACpD3C,EAAAA,EAAAA,KAACoE,EAAAA,IAAW,CAACnE,UAAS,mBAEtBD,EAAAA,EAAAA,KAACqE,EAAAA,IAAM,CAACpE,UAAU,mBAIxBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wEAAuEC,SACnFsB,GACCY,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAApE,SAAA,EACEF,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CACHC,GAAE,UAAAP,OAAY+B,EAAKvB,KACnB1C,UAAS,gFAAAkC,OAAkFf,EAAa,iBAAgBlB,SAEvHgE,EAAKxD,SAERV,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CACHC,GAAE,aAAAP,OAAe+B,EAAKrD,QAAQ8B,KAC9B1C,UAAS,sGAAAkC,OAAwGf,EAAa,iBAAgBlB,SAE7IgE,EAAKrD,QAAQF,WAIlBX,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CACHC,GAAE,UAAAP,OAAY+B,EAAKvB,KACnB1C,UAAS,6FAAAkC,OAA+Ff,GAAgBlB,SAEvHgE,EAAKxD,WAIZ0B,EAAAA,EAAAA,MAAA,OAAKnC,UAAU,0DAAyDC,SAAA,EACtEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAEgE,EAAKlC,YAC5ChC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAAA,QACEC,UAAS,GAAAkC,OACPgC,EAAQ,IAAM,EAAI,mBAAqB,mBAAkB,4CAChBjE,UAE3CF,EAAAA,EAAAA,KAACoD,EAAAA,EAAU,CAACmB,OAAQL,EAAKvB,IAAKa,KAAM,cAGxCxD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAAA,QACEC,UAAS,GAAAkC,OACPgC,EAAQ,IAAM,EAAI,mBAAqB,mBAAkB,4CAChBjE,UAE3CF,EAAAA,EAAAA,KAACwE,EAAAA,EAAmB,CAACD,OAAQL,EAAKvB,eA5DnCuB,EAAKvB,OAkEbe,EAAe1C,EAAMyD,SACpBzE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,UACvCF,EAAAA,EAAAA,KAAA,UACE+C,QAlFc2B,KACtBf,EAAgBD,EAPG,EAOyB,EAkFpCzD,UAAS,+BAAAkC,OAAiCf,EAAa,yDAAwDlB,SAChH,oBAKF,C,0KC9FT,MAiFA,EAjFkByE,KAChB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,OAEbC,KAAMC,EAAK,UACXC,EAAS,QACTC,EAAO,MACPC,IACEC,EAAAA,EAAAA,IAAwBP,GAQ5B,OANAQ,EAAAA,EAAAA,YAAU,KACJH,GACFI,QAAQH,MAAMA,EAChB,IAGEF,GACKhF,EAAAA,EAAAA,KAACL,EAAAA,EAAO,IAEbsF,GACKjF,EAAAA,EAAAA,KAACsF,EAAAA,EAAQ,CAACJ,MAAOA,KAIxB9C,EAAAA,EAAAA,MAAA,WAASnC,UAAU,iBAAgBC,SAAA,EACjCkC,EAAAA,EAAAA,MAACmD,EAAAA,GAAM,CAACC,mBAAiB,EAAAtF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAAE,SAAA,GAAAiC,OAAW4C,EAAMlE,QAAQF,KAAI,OAAAwB,OAAM4C,EAAMrE,MAAK,6BAC9CV,EAAAA,EAAAA,KAAA,QACEyF,IAAI,YACJC,KAAI,qCAAAvD,OAAuC4C,EAAMpC,QAEnD3C,EAAAA,EAAAA,KAAA,QACEW,KAAK,cACLgF,QAAO,UAAAxD,OAAY4C,EAAMrE,MAAK,QAAAyB,OAC5B4C,EAAMlE,QAAQF,KAAI,oEAAAwB,QAC+CU,EAAAA,EAAAA,IACjEkC,EAAM5D,iBAGVnB,EAAAA,EAAAA,KAAA,QACE4F,SAAS,WACTD,QAAO,GAAAxD,OAAK4C,EAAMlE,QAAQF,KAAI,OAAAwB,OAAM4C,EAAMrE,MAAK,6BAEjDV,EAAAA,EAAAA,KAAA,QACE4F,SAAS,iBACTD,QAAO,UAAAxD,OAAY4C,EAAMrE,MAAK,QAAAyB,OAC5B4C,EAAMlE,QAAQF,KAAI,oEAAAwB,QAC+CU,EAAAA,EAAAA,IACjEkC,EAAM5D,iBAGVnB,EAAAA,EAAAA,KAAA,QAAM4F,SAAS,WAAWD,QAASZ,EAAM9D,YAAc,MACvDjB,EAAAA,EAAAA,KAAA,QACE4F,SAAS,SACTD,QAAO,4CAAAxD,OAA8C4C,EAAMpC,QAE7D3C,EAAAA,EAAAA,KAAA,QAAMW,KAAK,eAAegF,QAAQ,aAClC3F,EAAAA,EAAAA,KAAA,QACEW,KAAK,gBACLgF,QAAO,GAAAxD,OAAK4C,EAAMlE,QAAQF,KAAI,OAAAwB,OAAM4C,EAAMrE,MAAK,6BAEjDV,EAAAA,EAAAA,KAAA,QACEW,KAAK,sBACLgF,QAAO,UAAAxD,OAAY4C,EAAMrE,MAAK,QAAAyB,OAC5B4C,EAAMlE,QAAQF,KAAI,oEAAAwB,QAC+CU,EAAAA,EAAAA,IACjEkC,EAAM5D,iBAGVnB,EAAAA,EAAAA,KAAA,QAAMW,KAAK,gBAAgBgF,QAASZ,EAAM9D,YAAc,SAE1DjB,EAAAA,EAAAA,KAAC6F,EAAAA,EAAc,CAACrF,SAAUuE,EAAOtE,aAAc,WAC/C2B,EAAAA,EAAAA,MAAA,WAASnC,UAAU,OAAMC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8BAA6BC,SAAC,WAC5CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAQ,CAAC9E,MAAO+D,EAAM/D,MAAOyC,SAAU,cAE1CzD,EAAAA,EAAAA,KAAC+F,EAAAA,EAAkB,KACnB/F,EAAAA,EAAAA,KAACgG,EAAAA,EAAmB,MACZ,C","sources":["components/Loading.jsx","components/ResourceDetail.jsx","components/SongList.jsx","features/Album/AlbumPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst Loading = () => {\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n  const image =\r\n    selectedTheme === \"rock\"\r\n      ? \"https://res.cloudinary.com/ojigs/image/upload/v1696593675/Jollify/jollify_rock_ff1o0d.gif\"\r\n      : \"https://res.cloudinary.com/ojigs/image/upload/v1696593603/Jollify/jollify_pop_gtzli0.gif\";\r\n\r\n  return (\r\n    <div className=\"h-full flex justify-center items-center\">\r\n      <img\r\n        src={image}\r\n        alt=\"\"\r\n        className=\"w-24 h-12 md:w-52 md:h-24\"\r\n        width={`210px`}\r\n        height={`100px`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setQueue, setPlaying } from \"../features/MusicPlayer/playerSlice\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport { aggregateSongsDuration, formatDate } from \"../utils/index\";\r\nimport { FaHeadphones, FaFolderOpen, FaUserAstronaut } from \"react-icons/fa\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ResourceDetail = ({ resource, resourceType }) => {\r\n  const {\r\n    title,\r\n    name,\r\n    bio,\r\n    artiste,\r\n    description,\r\n    genre,\r\n    songs,\r\n    coverImage,\r\n    image,\r\n    createdBy,\r\n    releaseDate,\r\n  } = resource;\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const isArtiste = resourceType === \"artiste\";\r\n  const isPlaylist = resourceType === \"playlist\";\r\n  const isAlbum = resourceType === \"album\";\r\n\r\n  const handlePlay = () => {\r\n    dispatch(setQueue({ queue: songs }));\r\n    dispatch(setPlaying(true));\r\n  };\r\n\r\n  return (\r\n    <motion.article\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"relative bg-secondary-200 sm:h-[400px] rounded-md shadow-lg w-full bg-center bg-cover bg-no-repeat\"\r\n      style={{ backgroundImage: `url(${coverImage || image || \"\"})` }}\r\n    >\r\n      <div className=\"bg-primary h-full bg-opacity-60 inset-0 rounded-md flex flex-col sm:flex-row justify-center sm:justify-start items-start sm:items-center gap-10 p-6 text-white backdrop-blur-2xl\">\r\n        <div\r\n          className={`w-48 h-48 md:w-60 md:h-60 flex-shrink-0 overflow-hidden bg-secondary-200 bg-center bg-cover bg-no-repeat shadow-md shadow-secondary-100 ${\r\n            isArtiste ? \"rounded-full\" : \"rounded-md\"\r\n          }`}\r\n        >\r\n          {(coverImage || image) && (\r\n            <img\r\n              src={coverImage || image}\r\n              alt={`${title} Cover`}\r\n              className={`w-full h-full object-cover backdrop-blur-2xl ${\r\n                isArtiste ? \"rounded-full\" : \"rounded-md\"\r\n              }`}\r\n            />\r\n          )}\r\n          {isPlaylist && !coverImage && (\r\n            <FaHeadphones className=\"p-4 text-gray-400 w-full h-full object-cover backdrop-blur-2xl\" />\r\n          )}\r\n          {isAlbum && !coverImage && (\r\n            <FaFolderOpen className=\"p-4 text-gray-400 w-full h-full object-cover backdrop-blur-2xl\" />\r\n          )}\r\n          {isArtiste && !image && (\r\n            <FaUserAstronaut className=\"pt-6 text-gray-400 w-full h-full rounded-full object-cover backdrop-blur-2xl\" />\r\n          )}\r\n        </div>\r\n        <article className=\"flex flex-col\">\r\n          {title && (\r\n            <h2 className={`text-2xl text-${selectedTheme}-50 font-bold mb-4`}>\r\n              {title.toUpperCase()}\r\n            </h2>\r\n          )}\r\n          {name && (\r\n            <h2 className={`text-2xl text-${selectedTheme}-50 font-bold mb-4`}>\r\n              {name.toUpperCase()}\r\n            </h2>\r\n          )}\r\n          {description && <p className={`text-gray-200 mt-2`}>{description}</p>}\r\n          {bio && <p className={`text-gray-200 mt-2`}>{bio}</p>}\r\n          {createdBy && (\r\n            <p className=\"mt-2\">\r\n              <span className=\"text-gray-400 mr-2\">Created By: </span>{\" \"}\r\n              <Link\r\n                to={`/users/${createdBy._id}`}\r\n                className={`text-gray-200 hover:text-${selectedTheme}-50 `}\r\n              >\r\n                {createdBy.username}\r\n              </Link>\r\n            </p>\r\n          )}\r\n          {artiste && (\r\n            <p className=\"mt-2\">\r\n              <span className=\"text-gray-400 mr-2\">Artiste: </span>{\" \"}\r\n              <Link\r\n                to={`/artistes/${artiste._id}`}\r\n                className={`text-gray-200 hover:text-${selectedTheme}-50 `}\r\n              >\r\n                {artiste.name}\r\n              </Link>\r\n            </p>\r\n          )}\r\n          {releaseDate && (\r\n            <p className={` mt-2`}>\r\n              <span className=\"text-gray-400 mr-2\">Release Date:</span>{\" \"}\r\n              <span className=\"text-gray-200 hover:text-${selectedTheme}-50\">\r\n                {formatDate(releaseDate)}\r\n              </span>\r\n            </p>\r\n          )}\r\n          {!isArtiste && (\r\n            <p className={` mt-2`}>\r\n              <span className=\"text-gray-400 mr-2\">Genre:</span>{\" \"}\r\n              <span className=\"text-gray-200 hover:text-${selectedTheme}-50\">\r\n                {genre}\r\n              </span>\r\n            </p>\r\n          )}\r\n          {!isAlbum && songs && (\r\n            <p className={`text-gray-200 hover:text-${selectedTheme}-50 mt-2`}>\r\n              {aggregateSongsDuration(songs)}\r\n            </p>\r\n          )}\r\n          <div className=\"flex flex-row gap-4 mt-6 h-10 items-stretch\">\r\n            {!isArtiste && (\r\n              <button\r\n                onClick={handlePlay}\r\n                className={`inset-0 flex items-center justify-center bg-${selectedTheme}-50 bg-opacity-80 active:bg-opacity-100 rounded-lg transition duration-300 ease-in-out py-1 px-2 md:px-4`}\r\n              >\r\n                <span className=\"mr-2 text-xl\">Play</span>\r\n              </button>\r\n            )}\r\n            <span className=\" bg-secondary-200 active:bg-opacity-50 rounded-lg transition duration-300 ease-in-out py-1 px-2 md:px-4 h-full inline-flex items-center\">\r\n              <LikeButton\r\n                albumId={isAlbum ? resource._id : null}\r\n                artisteId={isArtiste ? resource._id : null}\r\n                playlistId={isPlaylist ? resource._id : null}\r\n                type={resourceType}\r\n              />\r\n            </span>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </motion.article>\r\n  );\r\n};\r\n\r\nexport default ResourceDetail;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport { BsSoundwave } from \"react-icons/bs\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport AddToPlaylistButton from \"./AddToPlaylistButton\";\r\nimport { setPlaying, setQueue } from \"../features/MusicPlayer/playerSlice\";\r\n\r\nconst SongList = ({ songs, listType }) => {\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n  const songsPerPage = 5;\r\n  const [visibleSongs, setVisibleSongs] = useState(songsPerPage);\r\n  const isPlaylist = listType === \"playlist\";\r\n  const dispatch = useDispatch();\r\n  const { currentSong, isPlaying } = useSelector((state) => state.player);\r\n\r\n  const handleMoreClick = () => {\r\n    setVisibleSongs(visibleSongs + songsPerPage);\r\n  };\r\n\r\n  const handlePlay = (index) => {\r\n    dispatch(setQueue({ queue: songs, index }));\r\n    dispatch(setPlaying(true));\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {songs.slice(0, visibleSongs).map((song, index) => (\r\n        <li\r\n          key={song._id}\r\n          className={`grid grid-cols-6 md:grid-cols-12 items-center justify-between gap-4 w-full rounded-md p-4 ${\r\n            currentSong._id === song._id\r\n              ? `bg-${selectedTheme} bg-opacity-50`\r\n              : index % 2 === 0\r\n              ? \"bg-secondary-100\"\r\n              : \"bg-secondary-200\"\r\n          }`}\r\n        >\r\n          <div className=\"col-span-1\">\r\n            <button onClick={() => handlePlay(index)}>\r\n              {isPlaying && currentSong && currentSong._id === song._id ? (\r\n                <BsSoundwave className={`animate-pulse`} />\r\n              ) : (\r\n                <FaPlay className=\"text-base\" />\r\n              )}\r\n            </button>\r\n          </div>\r\n          <div className=\"col-span-2 md:col-span-8 flex flex-col gap-1 items-start truncate ...\">\r\n            {isPlaylist ? (\r\n              <>\r\n                <Link\r\n                  to={`/songs/${song._id}`}\r\n                  className={`hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-${selectedTheme} truncate ...`}\r\n                >\r\n                  {song.title}\r\n                </Link>\r\n                <Link\r\n                  to={`/artistes/${song.artiste._id}`}\r\n                  className={`text-sm text-gray-400 hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-${selectedTheme} truncate ...`}\r\n                >\r\n                  {song.artiste.name}\r\n                </Link>\r\n              </>\r\n            ) : (\r\n              <Link\r\n                to={`/songs/${song._id}`}\r\n                className={`truncate ... hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-${selectedTheme}`}\r\n              >\r\n                {song.title}\r\n              </Link>\r\n            )}\r\n          </div>\r\n          <div className=\"col-span-3 justify-end items-center flex gap-2 sm:gap-4\">\r\n            <span className=\"col-span-1 text-end\">{song.duration}</span>\r\n            <div className=\"col-span-1 text-end\">\r\n              <span\r\n                className={`${\r\n                  index % 2 === 0 ? \"bg-secondary-200\" : \"bg-secondary-100\"\r\n                } p-2 rounded-md inline-flex items-center`}\r\n              >\r\n                <LikeButton songId={song._id} type={\"song\"} />\r\n              </span>\r\n            </div>\r\n            <div className=\"col-span-1 text-end\">\r\n              <span\r\n                className={`${\r\n                  index % 2 === 0 ? \"bg-secondary-200\" : \"bg-secondary-100\"\r\n                } p-2 rounded-md inline-flex items-center`}\r\n              >\r\n                <AddToPlaylistButton songId={song._id} />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n      {visibleSongs < songs.length && (\r\n        <div className=\"flex justify-center mt-4\">\r\n          <button\r\n            onClick={handleMoreClick}\r\n            className={`text-white px-4 py-2 border-${selectedTheme} border rounded-full hover:bg-primary-dark transition`}\r\n          >\r\n            More &darr;\r\n          </button>\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetAlbumDetailsQuery } from \"./albumApiSlice\";\r\nimport ResourceDetail from \"../../components/ResourceDetail\";\r\nimport SongList from \"../../components/SongList\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMsg from \"../../components/ErrorMsg\";\r\nimport AddToPlaylistModal from \"../Playlist/AddToPlaylistModal\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { formatDate } from \"../../utils\";\r\nimport CreatePlaylistModal from \"../Studio/MyPlaylists/CreatePlaylistModal\";\r\n\r\nconst AlbumPage = () => {\r\n  const { id } = useParams();\r\n  const {\r\n    data: album,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n  } = useGetAlbumDetailsQuery(id);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      console.error(error);\r\n    }\r\n  });\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  if (isError) {\r\n    return <ErrorMsg error={error} />;\r\n  }\r\n\r\n  return (\r\n    <section className=\" text-gray-200\">\r\n      <Helmet prioritizeSeoTags>\r\n        <title>{`${album.artiste.name} - ${album.title} MP3 Stream on Jollify`}</title>\r\n        <link\r\n          rel=\"canonical\"\r\n          href={`https://jollify.vercel.app/albums/${album._id}`}\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content={`Stream ${album.title} by ${\r\n            album.artiste.name\r\n          } on Jollify and enjoy other amazing music collections. Released ${formatDate(\r\n            album.releaseDate\r\n          )}`}\r\n        />\r\n        <meta\r\n          property=\"og:title\"\r\n          content={`${album.artiste.name} - ${album.title} MP3 Stream on Jollify`}\r\n        />\r\n        <meta\r\n          property=\"og:description\"\r\n          content={`Stream ${album.title} by ${\r\n            album.artiste.name\r\n          } on Jollify and enjoy other amazing music collections. Released ${formatDate(\r\n            album.releaseDate\r\n          )}`}\r\n        />\r\n        <meta property=\"og:image\" content={album.coverImage || \"\"} />\r\n        <meta\r\n          property=\"og:url\"\r\n          content={`https://jollify-server.vercel.app/albums/${album._id}`}\r\n        />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta\r\n          name=\"twitter:title\"\r\n          content={`${album.artiste.name} - ${album.title} MP3 Stream on Jollify`}\r\n        />\r\n        <meta\r\n          name=\"twitter:description\"\r\n          content={`Stream ${album.title} by ${\r\n            album.artiste.name\r\n          } on Jollify and enjoy other amazing music collections. Released ${formatDate(\r\n            album.releaseDate\r\n          )}`}\r\n        />\r\n        <meta name=\"twitter:image\" content={album.coverImage || \"\"} />\r\n      </Helmet>\r\n      <ResourceDetail resource={album} resourceType={\"album\"} />\r\n      <section className=\"mt-8\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Songs</h2>\r\n        <SongList songs={album.songs} listType={\"album\"} />\r\n      </section>\r\n      <AddToPlaylistModal />\r\n      <CreatePlaylistModal />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AlbumPage;\r\n"],"names":["Loading","image","useSelector","state","theme","_jsx","className","children","src","alt","width","height","_ref","resource","resourceType","title","name","bio","artiste","description","genre","songs","coverImage","createdBy","releaseDate","selectedTheme","dispatch","useDispatch","isArtiste","isPlaylist","isAlbum","motion","article","initial","opacity","animate","transition","duration","style","backgroundImage","concat","_jsxs","FaHeadphones","FaFolderOpen","FaUserAstronaut","toUpperCase","Link","to","_id","username","formatDate","aggregateSongsDuration","onClick","handlePlay","setQueue","queue","setPlaying","LikeButton","albumId","artisteId","playlistId","type","listType","visibleSongs","setVisibleSongs","useState","currentSong","isPlaying","player","slice","map","song","index","BsSoundwave","FaPlay","_Fragment","songId","AddToPlaylistButton","length","handleMoreClick","AlbumPage","id","useParams","data","album","isLoading","isError","error","useGetAlbumDetailsQuery","useEffect","console","ErrorMsg","Helmet","prioritizeSeoTags","rel","href","content","property","ResourceDetail","SongList","AddToPlaylistModal","CreatePlaylistModal"],"sourceRoot":""}