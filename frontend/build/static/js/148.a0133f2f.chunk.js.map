{"version":3,"file":"static/js/148.a0133f2f.chunk.js","mappings":"4IAEA,MAoBA,EApBgBA,KACd,MACMC,EACc,UAFEC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAG7C,4FACA,2FAEN,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0CAAyCC,UACtDF,EAAAA,EAAAA,KAAA,OACEG,IAAKP,EACLQ,IAAI,GACJH,UAAU,4BACVI,MAAK,QACLC,OAAM,WAEJ,C,uJCVV,MAmFA,EAnFmBC,IAAe,IAAd,KAAEC,GAAMD,EAC1B,MAAM,MAAEE,EAAK,WAAEC,EAAU,QAAEC,EAAO,MAAEC,EAAK,MAAEC,EAAK,MAAEC,GAAUN,EACtDO,GAAgBlB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAC7CiB,GAAWC,EAAAA,EAAAA,MAOjB,OACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAOC,QAAO,CACbC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,IACxBvB,UAAU,4FACVwB,MAAO,CAAEC,gBAAgB,OAADC,OAASjB,GAAc,GAAE,MAAMR,UAEvD0B,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,oLAAmLC,SAAA,EAChMF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uIAAsIC,SAClJQ,GACCV,EAAAA,EAAAA,KAAA,OACEG,IAAKO,EACLN,IAAG,GAAAuB,OAAKlB,EAAK,UACbR,UAAU,6DAGZD,EAAAA,EAAAA,KAAC6B,EAAAA,IAAa,CAAC5B,UAAU,sEAG7B2B,EAAAA,EAAAA,MAAA,WAAS3B,UAAU,gBAAeC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,iBAAA0B,OAAmBZ,EAAa,sBAAqBb,SAC/DO,EAAMqB,iBAETF,EAAAA,EAAAA,MAAA,KAAG3B,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAC,cAAiB,KACtDF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CACHC,GAAE,aAAAL,OAAehB,EAAQsB,KACzBhC,UAAS,4BAAA0B,OAA8BZ,EAAa,QAAOb,SAE1DS,EAAQuB,UAGZtB,IACCgB,EAAAA,EAAAA,MAAA,KAAG3B,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAC,YAAe,KACpDF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CACHC,GAAE,WAAAL,OAAaf,EAAMqB,KACrBhC,UAAS,4BAAA0B,OAA8BZ,EAAa,QAAOb,SAE1DU,EAAMH,YAIbmB,EAAAA,EAAAA,MAAA,KAAG3B,UAAS,OAASC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAC,WAAc,KACnDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+CAA8CC,SAC3DW,QAGLe,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,UACEmC,QAzDOC,KACjBpB,GAASqB,EAAAA,EAAAA,IAAS,CAAEC,MAAO,CAAC9B,MAC5BQ,GAASuB,EAAAA,EAAAA,KAAW,GAAM,EAwDhBtC,UAAS,+BAAA0B,OAAiCZ,EAAa,iIAAgIb,UAEvLF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,YAEjC0B,EAAAA,EAAAA,MAAA,QAAM3B,UAAU,0IAAyIC,SAAA,EACvJF,EAAAA,EAAAA,KAACwC,EAAAA,EAAU,CAACC,OAAQjC,EAAKyB,IAAKS,KAAM,UACpC1C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEY,GAASA,EAAM6B,aAEzC3C,EAAAA,EAAAA,KAAA,QACEC,UAAS,2IAA6IC,UAEtJF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAmB,CAACH,OAAQjC,EAAKyB,kBAK3B,E,uBCrFrB,MAeA,EAfe1B,IAAiB,IAAhB,OAAEsC,GAAQtC,EACxB,MAAMuC,EAAgBC,IAAAA,SAAmBF,GAEzC,OACEjB,EAAAA,EAAAA,MAAA,WAAS3B,UAAU,OAAMC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAC,WACzD2C,GACC7C,EAAAA,EAAAA,KAAA,WAASgD,wBAAyB,CAAEC,OAAQH,MAE5C9C,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAAQC,SAAC,kCAEhB,E,wBCXd,MAoCA,EApCqBK,IAAoB,IAAnB,UAAE2C,GAAW3C,EACjC,MAAO4C,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAgCjD,OA9BAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAqBA,KACzB,MAAMC,EAAO,IAAIC,KAAKP,GAEhBQ,EADM,IAAID,KACGD,EACbG,EAAS,IACTC,EAAO,KACPC,EAAM,GAAKD,EAEjB,GAAIF,EAAOC,EACTP,EAAgB,iBACX,GAAIM,EAAOE,EAAM,CACtB,MAAME,EAAUC,KAAKC,MAAMN,EAAOC,GAClCP,EAAgB,GAADzB,OAAImC,EAAO,MAC5B,MAAO,GAAIJ,EAAOG,EAAK,CACrB,MAAMI,EAAQF,KAAKC,MAAMN,EAAOE,GAChCR,EAAgB,GAADzB,OAAIsC,EAAK,MAC1B,KAAO,CACL,MAAMC,EAAOH,KAAKC,MAAMN,EAAOG,GAC/BT,EAAgB,GAADzB,OAAIuC,EAAI,MACzB,GAGFX,IAEA,MAAMY,EAAaC,YAAYb,EAAoB,KAEnD,MAAO,IAAMc,cAAcF,EAAW,GACrC,CAACjB,KAEGlD,EAAAA,EAAAA,KAAA,QAAAE,SAAOiD,GAAoB,ECmFpC,EA7GwB5C,IAA2B,IAA1B,SAAE+D,EAAQ,OAAE7B,GAAQlC,EAC3C,MAAOgE,GAAY,UAAEC,KAAeC,EAAAA,EAAAA,OAC7BC,EAAYC,IAAiBtB,EAAAA,EAAAA,UAAS,KACtCuB,EAAkBC,IAAuBxB,EAAAA,EAAAA,UAAS,MACnDtC,GAAgBlB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAC7C,gBAAE+E,IAAoBjF,EAAAA,EAAAA,KAAaC,GAAUA,EAAMiF,OACnDC,GAAWC,EAAAA,EAAAA,QAAO,MAClBjE,GAAWC,EAAAA,EAAAA,MAyBjB,OACEW,EAAAA,EAAAA,MAAA,WAAS3B,UAAU,OAAMC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAC,cAC1DF,EAAAA,EAAAA,KAAA,QAAMkF,SA1BeC,UAEvB,GADAC,EAAEC,kBACGP,EAGH,OAFA9D,GAASsE,EAAAA,EAAAA,IAAW,uBACpBtE,GAASuE,EAAAA,EAAAA,OAGX,IAAKb,EAEH,YADAG,EAAoB,0BAGtB,MAAMW,EAAmBzC,IAAAA,SAAmB2B,IACtC,MAAEe,SAAgBlB,EAAW,CACjC9B,SACAiD,KAAM,CAAEC,KAAMH,KAEZC,GACFG,QAAQC,IAAIJ,GAEdd,EAAc,IACdK,EAASc,QAAQC,MAAQ,IAAI,EAMM7F,UAC/B0B,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,yDAAwDC,SAAA,EACrEF,EAAAA,EAAAA,KAAA,YACEgG,IAAKhB,EACL/E,UAAU,mKACVgG,YAAY,mBACZC,SAAWd,GAAMT,EAAcS,EAAEe,OAAOJ,MAAMK,UAE/CxB,IACC5E,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+CAA8CC,SAC3D0E,KAGL5E,EAAAA,EAAAA,KAAA,UACE0C,KAAK,SACLzC,UAAS,MAAA0B,OAAQZ,EAAa,KAAAY,OAC5B6C,EACI,mCAAkC,YAAA7C,OACtBZ,EAAa,4BAA0B,wCAEzDsF,SAAU7B,EAAUtE,SAEnBsE,EAAY,aAAe,qBAKjCF,GAAYA,EAAS3B,OAAS,GAC7B3C,EAAAA,EAAAA,KAAA,WAAAE,SACGoE,EAASgC,KAAI,CAACC,EAASC,KAAK,IAAAC,EAAA,OAC3B7E,EAAAA,EAAAA,MAAA,OAEE3B,UAAU,uCAAsCC,SAAA,EAEhDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAACC,GAAE,UAAAL,OAAY4E,EAAQG,KAAKzE,KAAM/B,SAC7B,OAAPqG,QAAO,IAAPA,GAAa,QAANE,EAAPF,EAASG,YAAI,IAAAD,GAAbA,EAAe7G,OACdI,EAAAA,EAAAA,KAAA,OACEG,IAAY,OAAPoG,QAAO,IAAPA,OAAO,EAAPA,EAASG,KAAK9G,MACnBQ,IAAY,OAAPmG,QAAO,IAAPA,OAAO,EAAPA,EAASG,KAAKC,SACnB1G,UAAU,4BAGZD,EAAAA,EAAAA,KAAC4G,EAAAA,IAAY,CAAC3G,UAAU,mDAI9B2B,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CACHC,GAAE,UAAAL,OAAY4E,EAAQG,KAAKzE,KAC3BhC,UAAS,gFAAA0B,OAAkFZ,GAAgBb,SAEnG,OAAPqG,QAAO,IAAPA,OAAO,EAAPA,EAASG,KAAKC,cAGnB3G,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAS,OAAPqG,QAAO,IAAPA,OAAO,EAAPA,EAASZ,QAC5C3F,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,UAC/BF,EAAAA,EAAAA,KAAC6G,EAAY,CAAC3D,UAAWqD,EAAQrD,cAElCsD,IAAUlC,EAAS3B,OAAS,IAC3B3C,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCA9BZsG,EAAQtE,IAiCT,OAIVjC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAAQC,SAAC,oDAEhB,E,4CCxGd,MA6EA,EA7EiB4G,KACf,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,OAEbC,KAAMzG,EAAI,UACVgE,EAAS,UACT0C,EAAS,QACTC,EAAO,MACP1B,IACE2B,EAAAA,EAAAA,IAAuBL,GAE3B,OAAIvC,GACKxE,EAAAA,EAAAA,KAACL,EAAAA,EAAO,IAGbwH,GACKnH,EAAAA,EAAAA,KAACqH,EAAAA,EAAQ,CAAC5B,MAAOA,KAIxBzF,EAAAA,EAAAA,KAAAsH,EAAAA,SAAA,CAAApH,SACGgH,IACCtF,EAAAA,EAAAA,MAAA,WAAS3B,UAAU,iBAAgBC,SAAA,EACjC0B,EAAAA,EAAAA,MAAC2F,EAAAA,GAAM,CAACC,mBAAiB,EAAAtH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAAE,SAAA,GAAAyB,OAAWnB,EAAKG,QAAQuB,KAAI,OAAAP,OAAMnB,EAAKC,MAAK,6BAC5CT,EAAAA,EAAAA,KAAA,QACEyH,IAAI,YACJC,KAAI,oCAAA/F,OAAsCnB,EAAKyB,QAEjDjC,EAAAA,EAAAA,KAAA,QACEkC,KAAK,cACLyF,QAAO,UAAAhG,OAAYnB,EAAKC,MAAK,QAAAkB,OAC3BnB,EAAKG,QAAQuB,KAAI,oEAAAP,QACgDiG,EAAAA,EAAAA,IACjEpH,EAAKqH,iBAGT7H,EAAAA,EAAAA,KAAA,QACE8H,SAAS,WACTH,QAAO,GAAAhG,OAAKnB,EAAKG,QAAQuB,KAAI,OAAAP,OAAMnB,EAAKC,MAAK,6BAE/CT,EAAAA,EAAAA,KAAA,QACE8H,SAAS,iBACTH,QAAO,UAAAhG,OAAYnB,EAAKC,MAAK,QAAAkB,OAC3BnB,EAAKG,QAAQuB,KAAI,oEAAAP,QACgDiG,EAAAA,EAAAA,IACjEpH,EAAKqH,iBAGT7H,EAAAA,EAAAA,KAAA,QAAM8H,SAAS,WAAWH,QAASnH,EAAKE,YAAc,MACtDV,EAAAA,EAAAA,KAAA,QACE8H,SAAS,SACTH,QAAO,2CAAAhG,OAA6CnB,EAAKyB,QAE3DjC,EAAAA,EAAAA,KAAA,QAAMkC,KAAK,eAAeyF,QAAQ,aAClC3H,EAAAA,EAAAA,KAAA,QACEkC,KAAK,gBACLyF,QAAO,GAAAhG,OAAKnB,EAAKG,QAAQuB,KAAI,OAAAP,OAAMnB,EAAKC,MAAK,6BAE/CT,EAAAA,EAAAA,KAAA,QACEkC,KAAK,sBACLyF,QAAO,UAAAhG,OAAYnB,EAAKC,MAAK,QAAAkB,OAC3BnB,EAAKG,QAAQuB,KAAI,oEAAAP,QACgDiG,EAAAA,EAAAA,IACjEpH,EAAKqH,iBAGT7H,EAAAA,EAAAA,KAAA,QAAMkC,KAAK,gBAAgByF,QAASnH,EAAKE,YAAc,SAEzDV,EAAAA,EAAAA,KAAC+H,EAAU,CAACvH,KAAMA,KAClBR,EAAAA,EAAAA,KAACgI,EAAM,CAACnF,OAAQrC,EAAKqC,UACrB7C,EAAAA,EAAAA,KAACiI,EAAe,CAAC3D,SAAU9D,EAAK8D,SAAU7B,OAAQjC,EAAKyB,UAG1D,C","sources":["components/Loading.jsx","features/Song/SongDetail.jsx","features/Song/Lyrics.jsx","components/RelativeTime.jsx","features/Song/CommentsSection.jsx","features/Song/SongPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst Loading = () => {\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n  const image =\r\n    selectedTheme === \"rock\"\r\n      ? \"https://res.cloudinary.com/ojigs/image/upload/v1696593675/Jollify/jollify_rock_ff1o0d.gif\"\r\n      : \"https://res.cloudinary.com/ojigs/image/upload/v1696593603/Jollify/jollify_pop_gtzli0.gif\";\r\n\r\n  return (\r\n    <div className=\"h-full flex justify-center items-center\">\r\n      <img\r\n        src={image}\r\n        alt=\"\"\r\n        className=\"w-24 h-12 md:w-52 md:h-24\"\r\n        width={`210px`}\r\n        height={`100px`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaCompactDisc } from \"react-icons/fa\";\r\nimport LikeButton from \"../../components/LikeButton\";\r\nimport AddToPlaylistButton from \"../../components/AddToPlaylistButton\";\r\nimport { setPlaying, setQueue } from \"../MusicPlayer/playerSlice\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst SongDetail = ({ song }) => {\r\n  const { title, coverImage, artiste, album, genre, likes } = song;\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePlay = () => {\r\n    dispatch(setQueue({ queue: [song] }));\r\n    dispatch(setPlaying(true));\r\n  };\r\n\r\n  return (\r\n    <motion.article\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"bg-secondary-200 sm:h-[400px] rounded-md shadow-lg w-full bg-center bg-cover bg-no-repeat\"\r\n      style={{ backgroundImage: `url(${coverImage || \"\"})` }}\r\n    >\r\n      <div className=\" bg-primary h-full bg-opacity-60 inset-0 rounded-md flex flex-col sm:flex-row justify-center sm:justify-start items-start sm:items-center gap-10 p-6 text-white backdrop-blur-2xl\">\r\n        <div className=\"w-48 rounded-md h-48 md:w-60 md:h-60 overflow-hidden bg-secondary-200 bg-center bg-cover bg-no-repeat shadow-md shadow-secondary-200\">\r\n          {coverImage ? (\r\n            <img\r\n              src={coverImage}\r\n              alt={`${title} Cover`}\r\n              className=\"w-full h-full object-cover rounded-md backdrop-blur-2xl\"\r\n            />\r\n          ) : (\r\n            <FaCompactDisc className=\"p-4 text-gray-400 w-full h-full object-cover backdrop-blur-2xl\" />\r\n          )}\r\n        </div>\r\n        <article className=\"flex flex-col\">\r\n          <h2 className={`text-2xl text-${selectedTheme}-50 font-bold mb-4`}>\r\n            {title.toUpperCase()}\r\n          </h2>\r\n          <p className=\"mt-2\">\r\n            <span className=\"text-gray-400 mr-2\">Artiste: </span>{\" \"}\r\n            <Link\r\n              to={`/artistes/${artiste._id}`}\r\n              className={`text-gray-200 hover:text-${selectedTheme}-50 `}\r\n            >\r\n              {artiste.name}\r\n            </Link>\r\n          </p>\r\n          {album && (\r\n            <p className=\"mt-2\">\r\n              <span className=\"text-gray-400 mr-2\">Album: </span>{\" \"}\r\n              <Link\r\n                to={`/albums/${album._id}`}\r\n                className={`text-gray-200 hover:text-${selectedTheme}-50 `}\r\n              >\r\n                {album.title}\r\n              </Link>\r\n            </p>\r\n          )}\r\n          <p className={`mt-2`}>\r\n            <span className=\"text-gray-400 mr-2\">Genre:</span>{\" \"}\r\n            <span className=\"text-gray-200 hover:text-${selectedTheme}-50\">\r\n              {genre}\r\n            </span>\r\n          </p>\r\n          <div className=\"mt-6 flex items-stretch h-10 gap-4\">\r\n            <button\r\n              onClick={handlePlay}\r\n              className={`inline-flex items-center bg-${selectedTheme}-50 bg-opacity-80 active:bg-opacity-100 active:translate-y-1 rounded-lg transition duration-300 ease-in-out py-1 px-2 md:px-4`}\r\n            >\r\n              <span className=\"mr-2 text-xl\">Play</span>\r\n            </button>\r\n            <span className=\" bg-secondary-200 active:bg-opacity-50 rounded-lg transition duration-300 ease-in-out py-1 px-2 md:px-4 h-full inline-flex items-center\">\r\n              <LikeButton songId={song._id} type={\"song\"} />\r\n              <span className=\"ml-2\">{likes && likes.length}</span>\r\n            </span>\r\n            <span\r\n              className={`text-white bg-secondary-200 active:bg-opacity-50 rounded-lg transition duration-300 ease-in-ou px-3 py-1 h-full inline-flex items-center`}\r\n            >\r\n              <AddToPlaylistButton songId={song._id} />\r\n            </span>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </motion.article>\r\n  );\r\n};\r\n\r\nexport default SongDetail;\r\n","import DOMPurify from \"dompurify\";\r\n\r\nconst Lyrics = ({ lyrics }) => {\r\n  const sanitizedHTML = DOMPurify.sanitize(lyrics);\r\n\r\n  return (\r\n    <section className=\"mt-6\">\r\n      <h1 className=\"text-xl md:text-2xl mb-4 md:font-semibold\">Lyrics</h1>\r\n      {lyrics ? (\r\n        <article dangerouslySetInnerHTML={{ __html: sanitizedHTML }} />\r\n      ) : (\r\n        <p className=\"italic\">No Lyrics yet for this song</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Lyrics;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst RelativeTime = ({ createdAt }) => {\r\n  const [relativeTime, setRelativeTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const updateRelativeTime = () => {\r\n      const date = new Date(createdAt);\r\n      const now = new Date();\r\n      const diff = now - date;\r\n      const minute = 60 * 1000;\r\n      const hour = 60 * minute;\r\n      const day = 24 * hour;\r\n\r\n      if (diff < minute) {\r\n        setRelativeTime(\"just now\");\r\n      } else if (diff < hour) {\r\n        const minutes = Math.floor(diff / minute);\r\n        setRelativeTime(`${minutes} m`);\r\n      } else if (diff < day) {\r\n        const hours = Math.floor(diff / hour);\r\n        setRelativeTime(`${hours} h`);\r\n      } else {\r\n        const days = Math.floor(diff / day);\r\n        setRelativeTime(`${days} d`);\r\n      }\r\n    };\r\n\r\n    updateRelativeTime();\r\n\r\n    const intervalId = setInterval(updateRelativeTime, 60000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [createdAt]);\r\n\r\n  return <span>{relativeTime}</span>;\r\n};\r\n\r\nexport default RelativeTime;\r\n","import { useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { useAddCommentMutation } from \"./songApiSlice\";\r\nimport { toggleLoginModal, setMessage } from \"../../app/modalSlice\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport RelativeTime from \"../../components/RelativeTime\";\r\n\r\nconst CommentsSection = ({ comments, songId }) => {\r\n  const [addComment, { isLoading }] = useAddCommentMutation();\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [validationErrors, setValidationErrors] = useState(null);\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddComment = async (e) => {\r\n    e.preventDefault();\r\n    if (!isAuthenticated) {\r\n      dispatch(setMessage(\"add a comment\"));\r\n      dispatch(toggleLoginModal());\r\n      return;\r\n    }\r\n    if (!newComment) {\r\n      setValidationErrors(\"Please write a comment\");\r\n      return;\r\n    }\r\n    const sanitizedComment = DOMPurify.sanitize(newComment);\r\n    const { error } = await addComment({\r\n      songId,\r\n      body: { text: sanitizedComment },\r\n    });\r\n    if (error) {\r\n      console.log(error);\r\n    }\r\n    setNewComment(\"\");\r\n    inputRef.current.value = null;\r\n  };\r\n\r\n  return (\r\n    <section className=\"mt-6\">\r\n      <h2 className=\"text-xl md:text-2xl mb-4 md:font-semibold\">Comments</h2>\r\n      <form onSubmit={handleAddComment}>\r\n        <div className=\"mb-8 lg:w-3/4 flex flex-col justify-center items-start\">\r\n          <textarea\r\n            ref={inputRef}\r\n            className=\"w-full lg:h-36 p-2 border bg-secondary-100 bg-opacity-80 focus:outline-none focus:outline-gray-600 focus:outline-offset-1 border-gray-500 rounded-lg resize-none\"\r\n            placeholder=\"Add a comment...\"\r\n            onChange={(e) => setNewComment(e.target.value.trim())}\r\n          />\r\n          {validationErrors && (\r\n            <span className=\"block text-sm mt-2 saturate-100 text-red-500\">\r\n              {validationErrors}\r\n            </span>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className={`bg-${selectedTheme} ${\r\n              isLoading\r\n                ? \"bg-opacity-90 cursor-not-allowed\"\r\n                : `hover:bg-${selectedTheme}-50 active:bg-opacity-50`\r\n            }  py-2 px-4 rounded-lg mt-4 self-end`}\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? \"Loading...\" : \"Add Comment\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {comments && comments.length > 0 ? (\r\n        <article>\r\n          {comments.map((comment, index) => (\r\n            <div\r\n              key={comment._id}\r\n              className=\"flex items-start gap-4 mb-6 lg:w-3/4\"\r\n            >\r\n              <div className=\"w-14 h-14 rounded-full\">\r\n                <Link to={`/users/${comment.user._id}`}>\r\n                  {comment?.user?.image ? (\r\n                    <img\r\n                      src={comment?.user.image}\r\n                      alt={comment?.user.username}\r\n                      className=\"w-12 h-12 rounded-full\"\r\n                    />\r\n                  ) : (\r\n                    <FaUserCircle className=\"w-12 h-12 pt-2 text-gray-400 rounded-full\" />\r\n                  )}\r\n                </Link>\r\n              </div>\r\n              <div className=\"ml-3 flex-grow\">\r\n                <h3 className=\"text-lg font-semibold\">\r\n                  <Link\r\n                    to={`/users/${comment.user._id}`}\r\n                    className={`hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-${selectedTheme}`}\r\n                  >\r\n                    {comment?.user.username}\r\n                  </Link>\r\n                </h3>\r\n                <p className=\"text-gray-300 mt-2\">{comment?.text}</p>\r\n                <p className=\"text-gray-400 mt-2\">\r\n                  <RelativeTime createdAt={comment.createdAt} />\r\n                </p>\r\n                {index !== comments.length - 1 && (\r\n                  <p className=\"h-[1px] bg-gray-600 mt-6\"></p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </article>\r\n      ) : (\r\n        <p className=\"italic\">No comment yet. Be the first to add a comment</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommentsSection;\r\n","import { useGetSongDetailsQuery } from \"./songApiSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SongDetail from \"./SongDetail\";\r\nimport Lyrics from \"./Lyrics\";\r\nimport CommentsSection from \"./CommentsSection\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMsg from \"../../components/ErrorMsg\";\r\nimport { formatDate } from \"../../utils\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst SongPage = () => {\r\n  const { id } = useParams();\r\n  const {\r\n    data: song,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n  } = useGetSongDetailsQuery(id);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <ErrorMsg error={error} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isSuccess && (\r\n        <section className=\" text-gray-200\">\r\n          <Helmet prioritizeSeoTags>\r\n            <title>{`${song.artiste.name} - ${song.title} MP3 Stream on Jollify`}</title>\r\n            <link\r\n              rel=\"canonical\"\r\n              href={`https://jollify.vercel.app/songs/${song._id}`}\r\n            />\r\n            <meta\r\n              name=\"description\"\r\n              content={`Stream ${song.title} by ${\r\n                song.artiste.name\r\n              } on Jollify and enjoy other amazing music collections. Released ${formatDate(\r\n                song.releaseDate\r\n              )}`}\r\n            />\r\n            <meta\r\n              property=\"og:title\"\r\n              content={`${song.artiste.name} - ${song.title} MP3 Stream on Jollify`}\r\n            />\r\n            <meta\r\n              property=\"og:description\"\r\n              content={`Stream ${song.title} by ${\r\n                song.artiste.name\r\n              } on Jollify and enjoy other amazing music collections. Released ${formatDate(\r\n                song.releaseDate\r\n              )}`}\r\n            />\r\n            <meta property=\"og:image\" content={song.coverImage || \"\"} />\r\n            <meta\r\n              property=\"og:url\"\r\n              content={`https://jollify-server.vercel.app/songs/${song._id}`}\r\n            />\r\n            <meta name=\"twitter:card\" content=\"summary\" />\r\n            <meta\r\n              name=\"twitter:title\"\r\n              content={`${song.artiste.name} - ${song.title} MP3 Stream on Jollify`}\r\n            />\r\n            <meta\r\n              name=\"twitter:description\"\r\n              content={`Stream ${song.title} by ${\r\n                song.artiste.name\r\n              } on Jollify and enjoy other amazing music collections. Released ${formatDate(\r\n                song.releaseDate\r\n              )}`}\r\n            />\r\n            <meta name=\"twitter:image\" content={song.coverImage || \"\"} />\r\n          </Helmet>\r\n          <SongDetail song={song} />\r\n          <Lyrics lyrics={song.lyrics} />\r\n          <CommentsSection comments={song.comments} songId={song._id} />\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SongPage;\r\n"],"names":["Loading","image","useSelector","state","theme","_jsx","className","children","src","alt","width","height","_ref","song","title","coverImage","artiste","album","genre","likes","selectedTheme","dispatch","useDispatch","motion","article","initial","opacity","animate","transition","duration","style","backgroundImage","concat","_jsxs","FaCompactDisc","toUpperCase","Link","to","_id","name","onClick","handlePlay","setQueue","queue","setPlaying","LikeButton","songId","type","length","AddToPlaylistButton","lyrics","sanitizedHTML","DOMPurify","dangerouslySetInnerHTML","__html","createdAt","relativeTime","setRelativeTime","useState","useEffect","updateRelativeTime","date","Date","diff","minute","hour","day","minutes","Math","floor","hours","days","intervalId","setInterval","clearInterval","comments","addComment","isLoading","useAddCommentMutation","newComment","setNewComment","validationErrors","setValidationErrors","isAuthenticated","auth","inputRef","useRef","onSubmit","async","e","preventDefault","setMessage","toggleLoginModal","sanitizedComment","error","body","text","console","log","current","value","ref","placeholder","onChange","target","trim","disabled","map","comment","index","_comment$user","user","username","FaUserCircle","RelativeTime","SongPage","id","useParams","data","isSuccess","isError","useGetSongDetailsQuery","ErrorMsg","_Fragment","Helmet","prioritizeSeoTags","rel","href","content","formatDate","releaseDate","property","SongDetail","Lyrics","CommentsSection"],"sourceRoot":""}