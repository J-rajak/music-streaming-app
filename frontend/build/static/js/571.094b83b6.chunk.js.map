{"version":3,"file":"static/js/571.094b83b6.chunk.js","mappings":"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","sources":["components/Loading.jsx","features/Playlist/PlaylistCard.jsx","features/Studio/MyPlaylists/MyPlaylistPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst Loading = () => {\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n  const image =\r\n    selectedTheme === \"rock\"\r\n      ? \"https://res.cloudinary.com/ojigs/image/upload/v1696593675/Jollify/jollify_rock_ff1o0d.gif\"\r\n      : \"https://res.cloudinary.com/ojigs/image/upload/v1696593603/Jollify/jollify_pop_gtzli0.gif\";\r\n\r\n  return (\r\n    <div className=\"h-full flex justify-center items-center\">\r\n      <img\r\n        src={image}\r\n        alt=\"\"\r\n        className=\"w-24 h-12 md:w-52 md:h-24\"\r\n        width={`210px`}\r\n        height={`100px`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaHeadphones } from \"react-icons/fa\";\r\n\r\nconst PlaylistCard = ({ playlist, type }) => {\r\n  const selectedTheme = useSelector((state) => state.theme);\r\n\r\n  const isUserPlaylist = type === \"user\";\r\n\r\n  return (\r\n    <article className=\"group bg-secondary-100 rounded-lg shadow-lg p-2 md:p-4 transition transform hover:scale-105\">\r\n      <div className=\"relative bg-secondary-200\">\r\n        <Link to={`/playlists/${playlist._id}`}>\r\n          {playlist.coverImage ? (\r\n            <img\r\n              src={playlist.coverImage}\r\n              alt={playlist.title}\r\n              className=\"w-full h-24 sm:h-40 object-cover rounded-t-lg relative\"\r\n            />\r\n          ) : (\r\n            <FaHeadphones className=\"w-full p-4 h-24 sm:h-40 text-gray-400\" />\r\n          )}\r\n        </Link>\r\n      </div>\r\n      <div className=\"p-2 md:p-4 flex flex-col\">\r\n        <Link\r\n          to={`/playlists/${playlist._id}`}\r\n          className={`text-sm sm:text-base lg:text-lg font-semibold mb-1 hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-${selectedTheme} truncate ...`}\r\n        >\r\n          {playlist.title}\r\n        </Link>\r\n        {!isUserPlaylist && (\r\n          <Link\r\n            to={`/users/${playlist.createdBy._id}`}\r\n            className={`text-xs sm:text-sm lg:text-base text-gray-500 hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-${selectedTheme} truncate ...`}\r\n          >\r\n            {playlist.createdBy.username}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default PlaylistCard;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { MdQueue } from \"react-icons/md\";\r\nimport PlaylistCard from \"../../Playlist/PlaylistCard\";\r\nimport { useGetCurrentUserQuery } from \"../../Users/userApiSlice\";\r\nimport Loading from \"../../../components/Loading\";\r\nimport ErrorMsg from \"../../../components/ErrorMsg\";\r\nimport { toggleCreatePlaylistModal } from \"../../../app/modalSlice\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst emptyArray = [];\r\n\r\nconst MyPlaylistPage = () => {\r\n  const {\r\n    data: playlists,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n  } = useGetCurrentUserQuery(undefined, {\r\n    selectFromResult: ({ data, isLoading, isError, error }) => ({\r\n      data: data?.playlist ?? emptyArray,\r\n      isLoading,\r\n      isError,\r\n      error,\r\n    }),\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <ErrorMsg error={error} />;\r\n  }\r\n\r\n  const openModal = () => {\r\n    dispatch(toggleCreatePlaylistModal());\r\n  };\r\n\r\n  return (\r\n    <section className=\"text-gray-100\">\r\n      <Helmet>\r\n        <title>My Playlists - Jollify</title>\r\n      </Helmet>\r\n      <h1 className=\"text-xl md:text-3xl font-semibold mb-8\">My Playlist</h1>\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n        className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4\"\r\n      >\r\n        <button\r\n          onClick={openModal}\r\n          className=\"w-full h-full min-h[120px] sm:min-h-[185px] lg:min-h-[256px] flex flex-col gap-2 justify-center items-center rounded-lg shadow-lg bg-secondary-100 hover:text-gray-400 active:text-opacity-80 cursor-pointer\"\r\n        >\r\n          <MdQueue className=\"text-3xl\" />\r\n          <span>Create Playlist</span>\r\n        </button>\r\n        {playlists &&\r\n          playlists.map((playlist) => (\r\n            <PlaylistCard\r\n              key={playlist._id}\r\n              playlist={playlist}\r\n              type={\"user\"}\r\n            />\r\n          ))}\r\n      </motion.div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MyPlaylistPage;\r\n"],"names":["Loading","image","useSelector","state","theme","_jsx","className","children","src","alt","width","height","_ref","playlist","type","selectedTheme","isUserPlaylist","_jsxs","Link","to","concat","_id","coverImage","title","FaHeadphones","createdBy","username","emptyArray","MyPlaylistPage","data","playlists","isLoading","isError","error","useGetCurrentUserQuery","undefined","selectFromResult","_data$playlist","dispatch","useDispatch","ErrorMsg","Helmet","motion","div","initial","opacity","y","animate","transition","duration","onClick","openModal","toggleCreatePlaylistModal","MdQueue","map","PlaylistCard"],"sourceRoot":""}